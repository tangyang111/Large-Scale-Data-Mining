============================ EE219 Project 1 ==============================
Xiaohan Wang
Yang Tang

======================= Environment & Dependencies ========================
Coding Environment:
	Python 2.7.14

Package:
	1. numpy v1.14.0
	2. matplotlib v2.1.2
	3. sklearn v0.19.1
	4. nltk v3.2.4

=============================== Instruction ===============================
Each .py file solves one question and can be run seperately to get results
in console output.

- Qa.py: for question a). You can run it directly and get the results and 
         histograms for the number of documents in each topic and the total
         number of documents in two classes.
- Qb.py: for question b). You can run it directly and get the results and 
         histograms for extracted number of terms in 8 topics corresponding 
         to different min document frequency.
- Qc.py: for question c). You can run it directly and get the results with 
         top 10 significant words to 4 classes respectively (in three 
         subsets: all, train, test).
- Qd.py: for question d). You can run it directly and get the results of 
         LSI method and NMF method respectively which mapped each document 
         to a 50-dimensional vector.
- Qe.py: for question e). You can run it directly and get the ROC curve, 
		 confusion matrix, accuracy, recall and precision of classifiers 
		 generated by both hard margin and soft margin SVM classifiers 
		 classifying datasets processed by LSI and NMF methods.
- Qf.py: for question f). You can run it directly and get the best values
		 of the parameter gamma, the confusion matrix, the accuracy, recall
		 and precision of the classifiers.
- Qg.py: for question g). You can run it directly and get indices of 
		 classifiers generated by naïve Bayes classifying datasets processed
		 by LSI and NMF methods.
- Qh.py: for question h). You can run it directly and get indices of 
		 classifiers generated by logistic regression classifying datasets 
		 processed by LSI and NMF methods.
- Qi.py: for question i). You can run it directly and get the relationship
		 between kinds, values of norm regularizations and performance of 
		 classifiers generated by logistic regression
- Qj.py: for question j). You can run it directly and get classification of
		 multiclass dataset through Naïve Bayes and multiclass SVM classification 
		 with both One VS One and One VS the rest methods

- all .ipynb files can be run directly on Jupyter Notebook and get the 
results below.

============================= Folder Content ==============================
- codes
	- Qa.py
	- Qb.py
	- Qc.py
	- Qd.py
	- Qe.py
	- Qf.py
	- Qg.py
	- Qh.py
	- Qi.py
	- Qj.py
	- Qa.ipynb
	- Qb.ipynb
	- Qc.ipynb
	- Qd.ipynb
	- Qe.ipynb
	- Qf.ipynb
	- Qg.ipynb
	- Qh.ipynb
	- Qi.ipynb
	- Qj.ipynb

- readme.txt
- report.pdf


